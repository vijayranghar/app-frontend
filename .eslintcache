[{"/Users/tokopedia/Documents/Pet Projects/food-delivery-app-frontend/src/components/header/index.js":"1","/Users/tokopedia/Documents/Pet Projects/food-delivery-app-frontend/src/index.js":"2","/Users/tokopedia/Documents/Pet Projects/food-delivery-app-frontend/src/components/locationBar/index.js":"3","/Users/tokopedia/Documents/Pet Projects/food-delivery-app-frontend/src/app.js":"4"},{"size":236,"mtime":1609510357266,"results":"5","hashOfConfig":"6"},{"size":219,"mtime":1609510133549,"results":"7","hashOfConfig":"6"},{"size":1324,"mtime":1609525163910,"results":"8","hashOfConfig":"6"},{"size":264,"mtime":1609510973970,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r5zq82",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tokopedia/Documents/Pet Projects/food-delivery-app-frontend/src/components/header/index.js",[],"/Users/tokopedia/Documents/Pet Projects/food-delivery-app-frontend/src/index.js",[],"/Users/tokopedia/Documents/Pet Projects/food-delivery-app-frontend/src/components/locationBar/index.js",["19","20","21"],"import React, { useState } from \"react\";\n\n//clean use callback hook\nconst LocationBar = () => {\n  const [loading, setLoading] = useState(false);\n  const [location, setLocation] = useState({ latitude: \"\", longitude: \"\" });\n  const [isErrorMessageVisible, setErrorMessageVisible] = useState(false);\n  let errorMessage = \"\";\n\n  const success = ({ coords }) => {\n    const { latitude, longitude } = coords;\n    setLocation({\n      latitude,\n      longitude\n    });\n    setLoading(false);\n  };\n\n  const error = () => {\n    console.log(\"sorry unable to retrieve your location\");\n    setLoading(false);\n  };\n\n  const handleLocation = () => {\n    setLoading(true);\n    if (!navigator.geolocation) {\n      errorMessage = \"Geolocation is not supported by your browser\";\n      setLoading(false);\n    } else {\n      navigator.geolocation.getCurrentPosition(success, error);\n    }\n  };\n  const { latitude, longitude } = location;\n  return (\n    <div>\n      <h2>Hungry?Order food from favourite restaurants near you</h2>\n      <div className=\"\">\n        <input type=\"text\" />\n        {latitude} {longitude}\n        <button onClick={handleLocation}>\n          {loading ? \"Getting your loction\" : \"get your current location\"}\n        </button>\n        <button>FIND FOOD</button>\n      </div>\n    </div>\n  );\n};\n\nexport default LocationBar;\n","/Users/tokopedia/Documents/Pet Projects/food-delivery-app-frontend/src/app.js",[],{"ruleId":"22","severity":1,"message":"23","line":7,"column":10,"nodeType":"24","messageId":"25","endLine":7,"endColumn":31},{"ruleId":"22","severity":1,"message":"26","line":7,"column":33,"nodeType":"24","messageId":"25","endLine":7,"endColumn":55},{"ruleId":"22","severity":1,"message":"27","line":27,"column":7,"nodeType":"24","messageId":"25","endLine":27,"endColumn":19},"no-unused-vars","'isErrorMessageVisible' is assigned a value but never used.","Identifier","unusedVar","'setErrorMessageVisible' is assigned a value but never used.","'errorMessage' is assigned a value but never used."]